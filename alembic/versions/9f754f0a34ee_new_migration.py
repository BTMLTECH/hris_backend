"""New migration

Revision ID: 9f754f0a34ee
Revises: 
Create Date: 2025-06-03 15:30:20.005749

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9f754f0a34ee'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=False),
    sa.Column('middle_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=False),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', name='user_gender_type_enum'), nullable=True),
    sa.Column('image_uri', sa.String(length=255), nullable=True),
    sa.Column('dob', sa.Date(), server_default=sa.text('CURRENT_DATE'), nullable=False),
    sa.Column('job_title', sa.String(length=255), nullable=True),
    sa.Column('staff_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=24), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=255), nullable=True),
    sa.Column('state', sa.String(length=255), nullable=True),
    sa.Column('country', sa.String(length=255), nullable=True),
    sa.Column('personal_email', sa.String(length=255), nullable=True),
    sa.Column('department_id', sa.Uuid(), nullable=True),
    sa.Column('employment_date', sa.Date(), server_default=sa.text('now()'), nullable=True),
    sa.Column('employment_type_id', sa.Uuid(), nullable=True),
    sa.Column('payroll_class_id', sa.Uuid(), nullable=True),
    sa.Column('tax_number', sa.String(length=255), nullable=True),
    sa.Column('bank_id', sa.Uuid(), nullable=True),
    sa.Column('bank_account_number', sa.String(length=255), nullable=True),
    sa.Column('pension_id', sa.Uuid(), nullable=True),
    sa.Column('pension_number', sa.String(length=255), nullable=True),
    sa.Column('role_id', sa.Uuid(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_login_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['bank_id'], ['banks.id'], ),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], name='fk_users_department_id'),
    sa.ForeignKeyConstraint(['employment_type_id'], ['employment_types.id'], ),
    sa.ForeignKeyConstraint(['payroll_class_id'], ['payrolls.id'], ),
    sa.ForeignKeyConstraint(['pension_id'], ['pensions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('personal_email')
    )
    op.create_table('attendance',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('status', sa.Enum('ACCURATE', 'EARLY', 'LATE', name='attendance_type_enum'), nullable=True),
    sa.Column('total_hours', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('clock_in_status', sa.Enum('EARLY', 'LATE', 'PRESENT', name='attendance_clock_type_enum'), nullable=False),
    sa.Column('clock_out_status', sa.Enum('EARLY', 'LATE', 'PRESENT', name='attendance_clock_type_enum'), nullable=True),
    sa.Column('clock_in_date', sa.Date(), server_default=sa.text('CURRENT_DATE'), nullable=False),
    sa.Column('clock_in_time', sa.Time(), server_default=sa.text('CURRENT_TIME'), nullable=False),
    sa.Column('clock_out_time', sa.Time(), nullable=True),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_banks',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('bank_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['bank_id'], ['banks.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_departments',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('department_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_employment_types',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('employment_type_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['employment_type_id'], ['employment_types.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_pensions',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('pension_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['pension_id'], ['pensions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_permissions',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('permission_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_roles',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('role_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_supervisors',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('supervisor_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['supervisor_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_supervisors_role'), 'user_supervisors', ['role'], unique=True)
    op.create_foreign_key('fk_departments_team_lead_id', 'departments', 'users', ['team_lead_id'], ['id'], ondelete='SET NULL', use_alter=True)
    op.create_foreign_key(None, 'leave_approvers', 'users', ['approver_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'leave_relievers', 'users', ['reliever_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'leave_requests', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'next_of_kins', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'next_of_kins', type_='foreignkey')
    op.drop_constraint(None, 'leave_requests', type_='foreignkey')
    op.drop_constraint(None, 'leave_relievers', type_='foreignkey')
    op.drop_constraint(None, 'leave_approvers', type_='foreignkey')
    op.drop_constraint('fk_departments_team_lead_id', 'departments', type_='foreignkey')
    op.drop_index(op.f('ix_user_supervisors_role'), table_name='user_supervisors')
    op.drop_table('user_supervisors')
    op.drop_table('user_roles')
    op.drop_table('user_permissions')
    op.drop_table('user_pensions')
    op.drop_table('user_employment_types')
    op.drop_table('user_departments')
    op.drop_table('user_banks')
    op.drop_table('attendance')
    op.drop_table('users')
    # ### end Alembic commands ###
