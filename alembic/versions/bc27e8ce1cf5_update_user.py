"""update: User

Revision ID: bc27e8ce1cf5
Revises: 7a82d9ae6417
Create Date: 2025-05-10 16:11:32.387187

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bc27e8ce1cf5'
down_revision: Union[str, None] = '7a82d9ae6417'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('departments',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=False),
    sa.Column('middle_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=False),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', name='user_gender_type_enum'), nullable=True),
    sa.Column('image_uri', sa.String(length=255), nullable=True),
    sa.Column('dob', sa.Date(), server_default=sa.text('CURRENT_DATE'), nullable=False),
    sa.Column('job_title', sa.String(length=255), nullable=True),
    sa.Column('staff_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=24), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=255), nullable=True),
    sa.Column('state', sa.String(length=255), nullable=True),
    sa.Column('country', sa.String(length=255), nullable=True),
    sa.Column('personal_email', sa.String(length=255), nullable=True),
    sa.Column('department_id', sa.Uuid(), nullable=True),
    sa.Column('position', sa.String(length=64), nullable=True),
    sa.Column('employment_date', sa.Date(), server_default=sa.text('now()'), nullable=True),
    sa.Column('employment_type_id', sa.Uuid(), nullable=True),
    sa.Column('payroll_class_id', sa.Uuid(), nullable=True),
    sa.Column('tax_number', sa.String(length=255), nullable=True),
    sa.Column('bank_id', sa.Uuid(), nullable=True),
    sa.Column('bank_account_number', sa.String(length=255), nullable=True),
    sa.Column('pension_id', sa.Uuid(), nullable=True),
    sa.Column('pension_number', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_login_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['bank_id'], ['banks.id'], ),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.ForeignKeyConstraint(['employment_type_id'], ['employment_types.id'], ),
    sa.ForeignKeyConstraint(['payroll_class_id'], ['payrolls.id'], ),
    sa.ForeignKeyConstraint(['pension_id'], ['pensions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('personal_email')
    )
    op.create_foreign_key(None, 'attendance', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'leave_approvers', 'users', ['approver_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'leave_relievers', 'users', ['reliever_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'leave_requests', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'next_of_kins', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'user_banks', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'user_departments', 'departments', ['department_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'user_departments', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'user_employment_types', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'user_pensions', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'user_permissions', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'user_roles', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'user_supervisors', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'user_supervisors', 'users', ['supervisor_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user_supervisors', type_='foreignkey')
    op.drop_constraint(None, 'user_supervisors', type_='foreignkey')
    op.drop_constraint(None, 'user_roles', type_='foreignkey')
    op.drop_constraint(None, 'user_permissions', type_='foreignkey')
    op.drop_constraint(None, 'user_pensions', type_='foreignkey')
    op.drop_constraint(None, 'user_employment_types', type_='foreignkey')
    op.drop_constraint(None, 'user_departments', type_='foreignkey')
    op.drop_constraint(None, 'user_departments', type_='foreignkey')
    op.drop_constraint(None, 'user_banks', type_='foreignkey')
    op.drop_constraint(None, 'next_of_kins', type_='foreignkey')
    op.drop_constraint(None, 'leave_requests', type_='foreignkey')
    op.drop_constraint(None, 'leave_relievers', type_='foreignkey')
    op.drop_constraint(None, 'leave_approvers', type_='foreignkey')
    op.drop_constraint(None, 'attendance', type_='foreignkey')
    op.drop_table('users')
    op.drop_table('departments')
    # ### end Alembic commands ###
